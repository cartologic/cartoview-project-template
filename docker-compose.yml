version: '3'

services:
  postgis:
    container_name: postgis-{{project_name}}
    image: cartoview/cartoview-postgis:latest
    restart: unless-stopped
    env_file:
      - ./env/postgis.env
    # expose:
    #   - "5432"
    volumes:
      - "pg-data-{{project_name}}:/var/lib/postgresql"
  elasticsearch:
    container_name: elasticsearch-{{project_name}}
    image: elasticsearch:5.6.12-alpine
    restart: unless-stopped
    stdin_open: true
    tty: true
    # expose:
    #   - "9300"
    #   - "9200"
  rabbitmq:
    container_name: rabbitmq-{{project_name}}
    image: rabbitmq:latest
    restart: unless-stopped
    # expose:
    #   - "5672"
    #   - "15672"
  data-dir-conf:
    container_name: data-dir-conf-{{project_name}}
    image: geonode/geoserver_data:2.14.x
    restart: on-failure
    container_name: gsconf4cartoview
    command: /bin/true
    volumes:
      - geoserver-data-dir-{{project_name}}:/geoserver_data/data
  geoserver:
    container_name: geoserver-{{project_name}}
    image: cartoview/geoserver_docker:2.14.x
    depends_on:
      - postgis
      - data-dir-conf
    restart: always
    # expose:
    #   - "8080"
    volumes:
      - "geoserver-data-dir-{{project_name}}:/geoserver_data"
    env_file:
      - ./env/tomcat.env
  cartoview:
    container_name: cartoview-{{project_name}}
    image: cartoview/cartoview:hisham-dev
    command: bash -c "python server.py"
    restart: unless-stopped
    hostname: cartoview
    depends_on:
      - postgis
      - geoserver
    env_file:
      - ./env/django.env
    volumes:
      - "./:/usr/src/carto_app"
    # expose:
    #   - "8000"
  celery:
    container_name: celery-{{project_name}}
    image: cartoview/cartoview:hisham-dev
    command: bash -c "celery worker --app={{project_name}} --broker=amqp://guest:guest@rabbitmq:5672/ -B -E -l debug"
    restart: unless-stopped
    hostname: celery
    depends_on:
      - postgis
      - rabbitmq
      - geoserver
    env_file:
      - ./env/django.env
    volumes:
      - "./:/usr/src/carto_app"
  nginx:
    container_name: nginx-{{project_name}}
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
volumes:
  geoserver-data-dir-{{project_name}}:
  pg-data-{{project_name}}: